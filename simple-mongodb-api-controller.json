{
"kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "simple-mongodb-api-controller",
    "annotations": {
      "openshift.io/display-name": "Mongo Controller",
      "description": "An example MongoDB Controller  application. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
      "tags": "quickstart,simple-mongodb-api-controller",
      "iconClass": "icon-simple-mongodb-api-controller",
      "openshift.io/long-description": "This template defines resources needed to develop a Mongo Controller application, including a build configuration and application deployment configuration.",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "openshift.io/support-url": "https://access.redhat.com",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
  "labels": {
      "template": "simple-mongodb-api-controller",
      "app": "${NAME}"
  },
"objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
   {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
   {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata":{
         "name": "springboot-maven3-centos"
      },
      "spec": {
	 "dockerImageRepository": "docker.io/codecentric/springboot-maven3-centos",
         "tags": [ {
            "name": "latest",
            "from": {
               "kind": "DockerImage",
               "name": "docker.io/codecentric/springboot-maven3-centos:latest"
            }
         } ]
      }
   },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
{
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStream",
              "name": "springboot-maven3-centos"
            },
            "env":  [
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
{
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "simple-mongodb-api-controller"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "simple-mongodb-api-controller",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "resources": {
                    "limits": {
                        "memory": "${MEMORY_LIMIT}"
                    }
                },
                "env": [
                ]
              }
            ]
          }
        }
      }
    }
   ],
"parameters": [
    {
      "name": "MONGODB_DBNAME",
      "displayName": "Mongo Database Name",
      "value": "mongodb"
    },
    {
      "name": "MONGODB_HOST",
      "displayName": "Mongo Database Host",
      "value": "mongodb"
    },
    {
      "name": "MONGODB_PORT",
      "displayName": "Mongo Database Port",
      "value": "27017"
    },
    {
      "name": "MONGODB_PASS",
      "displayName": "Mongo Database Password",
      "value": "mongodb"
    },
    {
      "name": "MONGODB_USER",
      "displayName": "Mongo Database Username",
      "value": "mongodb"
    },
    {
      "name": "TEST_VAL",
      "displayName": "value for testing spring properties",
      "value": "it works!"
    },
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "simple-mongodb-api-controller"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/afeiszli/simple-mongodb-api-controller.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the mongo service, if left blank a value will be defaulted.",
      "value": ""
    }
  ]
}
